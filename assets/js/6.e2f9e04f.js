(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{174:function(t,e,i){"use strict";i.r(e);var r=i(0),s=Object(r.a)({},function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),i("p",[t._v("简单工厂模式（Simple Factory Pattern）是指由一个工厂对象决定创建出哪一种产品类的实例。但它不属于GOF，23种设计模式(参考资料:\n"),i("a",{attrs:{href:"http://en.wikipedia.org/wiki/Design_Patterns#Patterns_by_Type",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://en.wikipedia.org/wiki/Design_Patterns#Patterns_by_Type"),i("OutboundLink")],1),t._v(")。")]),t._v(" "),i("p",[t._v("简单工厂适用于工厂类负责创建的对象较少的场景，且客户端只需要传入工厂类的参数，对于如何创建对象的逻辑，并不需关心。")]),t._v(" "),i("p",[t._v("不多说，直接开始上代码。")])])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"工厂模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#工厂模式","aria-hidden":"true"}},[this._v("#")]),this._v(" 工厂模式")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"历史由来"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#历史由来","aria-hidden":"true"}},[this._v("#")]),this._v(" 历史由来")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[this._v("自给自足（没有工厂）")]),this._v(" "),e("li",[this._v("小作坊（简单工厂，民间酒坊）")]),this._v(" "),e("li",[this._v("流水线（工厂方法，单一流水线）")]),this._v(" "),e("li",[this._v("代工厂（抽象工厂，富士康）")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"简单工厂模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#简单工厂模式","aria-hidden":"true"}},[this._v("#")]),this._v(" 简单工厂模式")])}],!1,null,null,null);e.default=s.exports}}]);